@page "/blog/{CategoryName}"
@using BlazorUI.Components.Public.Blog
@using BlazorUI.Components.Shared
@using Core.Models
@using Core


<NavBar />

<main class="container min-vh-90 py-5">
	<div class="row">
		<div class="col">
			@if (_category == null || _publishedPosts == null)
			{
				<LoadingSpinner />
			}
			else
			{
				<nav aria-label="breadcrumb" class="ps-3 row md-f-size-1-5">
					<ol class="breadcrumb">
						<li class="breadcrumb-item"><a href="/blog">Blog</a></li>
						<li class="breadcrumb-item active" aria-current="page">@_category.Name</li>
					</ol>
				</nav>

				<h1 class="my-3">Blog posts in @_category.Name</h1>

				@if (_publishedPosts.Count < 1)
				{
					<h3>No categories found.</h3>
				}
				else 
				{
					<div class="row">
						@foreach (var post in _publishedPosts)
						{
							<div class="col-md-4">
								<PostCard Category="_category" Post="post" />
							</div>
						}
					</div>
				}
			}
		</div>
	</div>
</main>

<Footer />

@code 
{
	[Parameter] public string CategoryName { get; set; }
	[Inject] InMemoryDatabaseCache DBCache { get; set; }

	private Category _category = null;
	private List<Post> _publishedPosts = null;

	protected override async Task OnInitializedAsync()
	{
		if (DBCache.Categories == null)
		{
			await DBCache.GetCategoriesAndCache();
		}

		_category = DBCache.Categories.Where(c => c.Name.ToLowerInvariant() == CategoryName).FirstOrDefault();

		if (_category?.Posts?.Count != 0)
		{
			_publishedPosts = _category.Posts.Where(post => post.Published == true).ToList();
		}
		else
		{
			_publishedPosts = new List<Post>();
		}
	}
}