@page "/portfolio"

@implements IDisposable
@code {

    [Inject] InMemoryDatabaseCache DBCache { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //This event subscription causes Blazor to rerender the component as the state has changed
        DBCache.OnProjectsDataChanged += StateHasChanged;
        DBCache.OnProjectDetailsChanged += StateHasChanged;

        //TODO: how do we know if this is updated?
        if (DBCache.Projects == null)
        {
            await DBCache.GetProjectsAndCache();
            await DBCache.GetProjectDetailsAndCache();
        }
    }

    public void Dispose()
    {
        //Prevents memory leaks
        DBCache.OnProjectsDataChanged -= StateHasChanged;
        DBCache.OnProjectDetailsChanged -= StateHasChanged;
    }

   
}
<BlazorUI.Components.Public.Shared.NavBar />

<main class="container min-vh-95 py-5 bg-white-94">
        <div class="row">
            <div class="col">
                <h1>Portfolio</h1>
                <p>Here contains a list of projects that I've built to demonstrate the use of technologies with source being available in github for judgement.</p>
                <p>Some may be based on courses (e.g. udemy) with some deviations and experimentation, like this Blazor application.</p>
            </div>
        </div>
        <div class="row">
            @if (DBCache.Projects != null)
            {
                foreach (var project in DBCache.Projects)
                {
                    <div class="col-md-4">
                        <BlazorUI.Components.Public.Portfolio.ProjectCard Project="project" />
                    </div>
                }
            }
            else
            {
                <h3>Hmm.. there doesn't appear to be anything here.</h3>
                <p><small>Might want to check that API...</small></p>
            }
        </div>
    </main>


<BlazorUI.Components.Public.Shared.Footer />
